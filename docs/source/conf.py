# -*- coding: utf-8 -*-
#
# swyft documentation build configuration file, created by
# sphinx-quickstart on Mon Aug 19 15:05:09 2019.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath("../../"))

import os

import sphinx_rtd_theme
from pkg_resources import get_distribution

import numpy

autodoc_mock_imports = [
    "numpy",
    "pylab",
    "tqdm",
    "numcodecs",
    "zarr",
    "torch",
    "pytorch_lightning",
    "scipy",
    "torchist",
]


# -- Custom project information --------------------------------------------------------

here = os.path.dirname(__file__)
repo = os.path.join(here, "..", "..")
#_version_py = os.path.join(repo, 'swyft', '__version__.py')
#version_ns = {}
#with open(_version_py) as f:
#    exec(f.read(), version_ns)
## The short X.Y version.
#version = '%i.%i' % version_ns['version_info'][:2]
## The full version, including alpha/beta/rc tags.
#release = version_ns['__version__']

import subprocess

try:
    git_rev = subprocess.check_output(
        ["git", "describe", "--exact-match", "HEAD"], universal_newlines=True
    )
except subprocess.CalledProcessError:
    try:
        git_rev = subprocess.check_output(
            ["git", "rev-parse", "HEAD"], universal_newlines=True
        )
    except subprocess.CalledProcessError:
        git_rev = ""
if git_rev:
    git_rev = git_rev.splitlines()[0] + "/"


# -- Custom config --------------------------------------------------------


autodoc_typehints = "description"
napoleon_numpy_docstring = False
autoclass_content = "both"

autodoc_type_aliases = {
    "PathType": "swyft.typing.PathType",
    "Device": "swyft.typing.Device",
    "Tensor": "swyft.typing.Tensor",
    "Array": "swyft.typing.Array",
    "Shape": "swyft.typing.Shape",
    "MarginalIndex": "swyft.typing.MarginalIndex",
    "StrictMarginalIndex": "swyft.typing.StrictMarginalIndex",
    "MarginalToArray": "swyft.typing.MarginalToArray",
    "MarginalToDataFrame": "swyft.typing.MarginalToDataFrame",
    "ParameterNamesType": "swyft.typing.ParameterNamesType",
    "ObsType": "swyft.typing.ObsType",
    "ObsShapeType": "swyft.typing.ObsShapeType",
    "ForwardModelType": "swyft.typing.ForwardModelType",
    "BaseLimitType": "swyft.typing.BaseLimitType",
    "LimitType": "swyft.typing.LimitType",
}

# nbsphinx
nbsphinx_kernel_name = "python3"  # https://github.com/spatialaudio/nbsphinx/issues/121
nbsphinx_allow_errors = True

# # To be used with autosummary,
# autodoc_default_flags = ['members']
# autosummary_generate = True

# This is processed by Jinja2 and inserted before each notebook
# idea taken from: https://github.com/vidartf/nbsphinx-link/blob/f1682a8b5bfd884bfed7ef7dfaf0810c6ae8a543/docs/source/conf.py

nbsphinx_link_target_root = repo

nbsphinx_prolog = (
    r"""
{% if env.metadata[env.docname]['nbsphinx-link-target'] %}
{% set docpath = env.metadata[env.docname]['nbsphinx-link-target'] %}
{% else %}
{% set docpath = env.doc2path(env.docname, base='docs/source/') %}
{% endif %}

.. only:: html

    .. role:: raw-html(raw)
        :format: html

    .. nbinfo::
        This page was generated from `{{ docpath }}`_.

    .. _{{ docpath }}: https://github.com/undark-lab/swyft/blob/"""
    + git_rev
    + r"{{ '\ '.join(docpath.split()) }}"  # it is required to join and split because spaces must be escaped in rst!!
)

nbsphinx_epilog = nbsphinx_prolog  # also insert after each notebook


# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    # "sphinx.ext.autosummary",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinxcontrib.bibtex",
    "nbsphinx",
    "nbsphinx_link",
#    "m2r2",
#    "sphinx_rtd_theme",
]

mathjax_path = (
    "https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"
)

# bibliography
bibtex_bibfiles = ["refs.bib"]
bibtex_reference_style = "author_year"


# Add any paths that contain templates here, relative to this directory.
templates_path = ["ntemplates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]
# source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "swyft"
copyright = "2022, Alex Cole, Benjamin Kurt Miller, Christoph Weniger"
author = "Alex Cole, Benjamin Kurt Miller, Christoph Weniger"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The full version, including alpha/beta/rc tags.
# release = get_distribution("swyft").version
# The short X.Y version.
# version = ".".join(release.split(".")[:2])

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = [
    # '_build',
]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
# html_theme = 'classic'
# html_theme = 'scrolls'
#html_theme = "sphinx_rtd_theme"
html_theme = "furo"
# html_theme_path = [sphinx_rtd_theme.get_html_theme_path()]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_title= "Swyft <release> documentation"

html_theme_options = {
    "titles_only": False,
#    "logo_only": True,
#    "sidebar_hide_name": True,
#    "announcement": "<em>Important</em> announcement!",
    "style_nav_header_background": "#595959",
}

html_logo = "_static/img/swyft_logo_wide.png"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["nstatic"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
# html_sidebars = {
#    "**": [
#        "about.html",
#        "navigation.html",
#        "relations.html",  # needs 'show_related': True theme option to display
#        "searchbox.html",
#        "donate.html",
#    ]
# }
#

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "swyftdoc"


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "swyft.tex",
        "swyft Documentation",
        "Benjamin Kurt Miller, Christoph Weniger, Alex Cole",
        "manual",
    )
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "swyft", "swyft Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "swyft",
        "swyft Documentation",
        author,
        "swyft",
        "One line description of project.",
        "Miscellaneous",
    )
]
